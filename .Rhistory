geom_col(fill = "palegreen")+
coord_flip()
seamap %>%
filter(species!="NA") %>%
count(species) %>%
arrange(desc(n)) %>%
ggplot(aes(x = species, y=n, fill=species))+
geom_col(fill = "darkgreen")+
coord_flip()
seamap %>%
filter(species!="NA") %>%
count(species) %>%
arrange(desc(n)) %>%
ggplot(aes(x = species, y=n, fill=species))+
geom_col(fill = "lavender")+
coord_flip()
seamap %>%
filter(species!="NA") %>%
count(species) %>%
arrange(desc(n)) %>%
ggplot(aes(x = species, y=n, fill=species))+
geom_col(fill = "lavender")+
coord_flip()+
theme_light()+
labs( )
seamap %>%
filter(species!="NA") %>%
count(species) %>%
arrange(desc(n)) %>%
ggplot(aes(x = species, y=n, fill=species))+
geom_col(fill = "lavender")+
coord_flip()+
theme_light()+
labs(title = "Most frequently occur turtle species",
x = "Species",
y = NULL)+
theme(plot.title=element_text(size=rel(1.75), hjust = 0.5))
seamap %>%
filter(species!="NA") %>%
count(species) %>%
arrange(desc(n)) %>%
ggplot(aes(x = reorder(species, n), y=n, fill=species))+
geom_col(fill = "lavender")+
coord_flip()+
theme_light()+
labs(title = "Most frequently occur turtle species",
x = "Species",
y = NULL)+
theme(plot.title=element_text(size=rel(1.75), hjust = 0.5))
seamap %>%
filter(species!="NA") %>%
count(species) %>%
arrange(desc(n)) %>%
ggplot(aes(x = reorder(species, n), y=n, fill=species))+
geom_col(fill = "lavender")+
coord_flip()+
theme_light()+
labs(title = "Most frequently occur turtle species",
x = "Species",
y = NULL)+
theme(plot.title=element_text(size=rel(1.75), hjust = 0.5))+
scale_colour_discrete()
seamap %>%
filter(species!="NA") %>%
count(species) %>%
arrange(desc(n)) %>%
ggplot(aes(x = reorder(species, n), y=n, fill=species))+
geom_col(fill = "lavender")+
coord_flip()+
theme_light()+
labs(title = "Most frequently occur turtle species",
x = "Species",
y = NULL)+
theme(plot.title=element_text(size=rel(1.75), hjust = 0.5))+
scale_x_discrete()
seamap %>%
filter(species!="NA") %>%
count(species) %>%
arrange(desc(n)) %>%
ggplot(aes(x = reorder(species, n), y=n, fill=species))+
geom_col(fill = "lavender")+
coord_flip()+
theme_light()+
labs(title = "Most frequently occur turtle species",
x = "Species",
y = NULL)+
theme(plot.title=element_text(size=rel(1.75), hjust = 0.5))+
scale_y_discrete()
seamap %>%
filter(species!="NA") %>%
count(species) %>%
arrange(desc(n)) %>%
ggplot(aes(x = reorder(species, n), y=n, fill=species))+
geom_col(fill = "lavender")+
coord_flip()+
theme_light()+
labs(title = "Most frequently occur turtle species",
x = "Species",
y = NULL)+
theme(plot.title=element_text(size=rel(1.75), hjust = 0.5))+
scale_x_discrete()
seamap %>%
filter(species!="NA") %>%
count(species) %>%
arrange(desc(n)) %>%
ggplot(aes(x = reorder(species, n), y=n, fill=species))+
geom_col(fill = "lavender")+
coord_flip()+
theme_light()+
labs(title = "Most frequently occur turtle species",
x = "Species",
y = NULL)+
theme(plot.title=element_text(size=rel(1.75), hjust = 0.5))+
scale_y_discrete()
seamap %>%
filter(species!="NA") %>%
count(species) %>%
arrange(desc(n)) %>%
ggplot(aes(x = reorder(species, n), y=n, fill=species))+
geom_col(fill = "lavender")+
coord_flip()+
theme_light()+
labs(title = "Most frequently occur turtle species",
x = "Species",
y = NULL)+
theme(plot.title=element_text(size=rel(1.75), hjust = 0.5))+
scale_x_discrete()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(dplyr)
library(naniar)
seamap <- read_csv("data/obis_seamap_swot_65e0e9344b011_20240229_153235_site_locations_csv.csv") %>% clean_names()
glimpse(seamap)
seamap %>%
filter(country != "NA") %>%
count(country) %>%
arrange(desc(n)) %>%
head(5) %>%
ggplot(aes(x = reorder(country,n), y=n))+
geom_col(position = "dodge", fill = "lightgoldenrod")+
coord_flip()+
labs(title = "Top 5 countries",
x = "Country",
y = NULL)+
theme(plot.title=element_text(size=rel(1.75), hjust = 0.5))
seamap %>%
filter(nesting_status != "NA") %>%
count(nesting_status) %>%
ggplot(aes(x = nesting_status, y=n))+
geom_col(fill = "darkolivegreen3")+
labs(title = "Nesting status",
x = NULL,
y = NULL)+
theme(plot.title=element_text(size=rel(1.75), hjust = 0.5))
seamap %>%
filter(!is.na(species)) %>%
count(species, nesting_status) %>%
ggplot(aes(x = nesting_status, y = n)) +
geom_col(fill = "lightgreen") +
facet_wrap(~ species, nrow = 3) +
labs(title = "Nesting Status comparison by turtle species",
x = "Nesting status",
y = NULL)+
theme(axis.text.x = element_text(angle = 50, hjust = 1)) +
theme(plot.title=element_text(size=rel(1.75), hjust = 0.5))
seamap %>%
filter(species!="NA") %>%
count(species) %>%
arrange(desc(n)) %>%
ggplot(aes(x = reorder(species, n), y=n, fill=species))+
geom_col(fill = "lavender")+
coord_flip()+
theme_light()+
labs(title = "Most frequently occur turtle species",
x = "Species",
y = NULL)+
theme(plot.title=element_text(size=rel(1.75), hjust = 0.5))+
scale_x_discrete()
View(seamap)
knitr::opts_chunk$set(echo = TRUE)
ui <- dashboardPage(
dashboardHeader(title = "Sea Turtle Biogeography", titleWidth = 400),
dashboardSidebar(
selectInput("country", "Select Country:", choices = unique(seamap$country), selected = "Australia")
),
dashboardBody(
leafletOutput("map", width = "100%", height = "600px")
)
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(shiny)
library(shinydashboard)
library(leaflet)
library(dplyr)
library(readr)
#install.packages("leaflet")
seamap <- read_csv("data/obis_seamap_swot_65e0e9344b011_20240229_153235_site_locations_csv.csv")
#register_stadiamaps("cf7e4fa6-eb1a-4afb-a4a8-6d5d47e2a05a", write = FALSE)
ui <- dashboardPage(
dashboardHeader(title = "Sea Turtle Biogeography", titleWidth = 400),
dashboardSidebar(
selectInput("country", "Select Country:", choices = unique(seamap$country), selected = "Australia")
),
dashboardBody(
leafletOutput("map", width = "100%", height = "600px")
)
)
server <- function(input, output) {
filtered_data <- reactive({
filter(seamap, country == input$country)
})
output$map <- renderLeaflet({
center_lat <- mean(filtered_data()$latitude)
center_lon <- mean(filtered_data()$longitude)
leaflet() %>%
addTiles(urlTemplate = "https://tiles.stadiamaps.com/tiles/osm_bright/{z}/{x}/{y}{r}.png",
attribution = '&copy; <a href="https://stadiamaps.com/">Stadia Maps</a> contributors') %>%
setView(lng = center_lon, lat = center_lat, zoom = 4) %>%
addMarkers(data = filtered_data(),
lng = ~longitude, lat = ~latitude,
popup = ~paste("Location: ", country))
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Sea Turtle Biogeography-Nesting Sites", titleWidth = 400),
dashboardSidebar(
selectInput("country", "Select Country:", choices = unique(seamap$country), selected = "Australia")
),
dashboardBody(
leafletOutput("map", width = "100%", height = "600px")
)
)
server <- function(input, output) {
filtered_data <- reactive({
filter(seamap, country == input$country)
})
output$map <- renderLeaflet({
center_lat <- mean(filtered_data()$latitude)
center_lon <- mean(filtered_data()$longitude)
leaflet() %>%
addTiles(urlTemplate = "https://tiles.stadiamaps.com/tiles/osm_bright/{z}/{x}/{y}{r}.png",
attribution = '&copy; <a href="https://stadiamaps.com/">Stadia Maps</a> contributors') %>%
setView(lng = center_lon, lat = center_lat, zoom = 4) %>%
addMarkers(data = filtered_data(),
lng = ~longitude, lat = ~latitude,
popup = ~paste("Location: ", country))
})
}
shinyApp(ui, server)
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("janitor")
library("naniar")
library(ggplot2)
library(ggmap)
library(RColorBrewer)
florida_stranding <- read_csv("data/Sea_Turtle_Strandings_Florida.csv") %>% clean_names()
summary(florida_stranding)
glimpse(florida_stranding)
florida_stranding %>%
naniar::miss_var_summary()
florida_stranding <- florida_stranding %>%
rename(longitude = x, latitude = y)
register_stadiamaps("cf7e4fa6-eb1a-4afb-a4a8-6d5d47e2a05a", write = FALSE) #API Key
florida_stranding %>%
#y=latitude, x=longitude
select(longitude, latitude) %>%
summary()
lat_florida <- c(24.23, 30.72)
long_florida <- c(-87.52, -79.49)
bbox_florida <- make_bbox(long_florida, lat_florida, f = 0.03) #f is the fraction of the bounding box to add to the range
map_florida <- get_stadiamap(bbox_florida, maptype = "stamen_terrain", zoom=7)
green_palette <- RColorBrewer::brewer.pal(7, "PRGn")
ggmap(map_florida) +
geom_point(data = florida_stranding, aes(longitude, latitude, color = commonname),
size = 0.5) +
scale_color_manual(values = setNames(green_palette, levels(florida_stranding$commonname))) +
labs(x = "Longitude", y = "Latitude", title = "Sea Turtle Stranding Locations in Florida by Species")
florida_stranding %>%
group_by(commonname) %>%
count(commonname) %>%
arrange(desc(n))
florida_stranding %>%
count(commonname) %>%
ggplot(aes(x = reorder(commonname, -n), y = n, fill = commonname)) +
geom_col(alpha = 0.7) +
geom_text(aes(label = n), vjust = -0.5, color = "grey43", size = 3) +
theme(axis.text.x = element_text(angle = 60, hjust = 1),
plot.title = element_text(size = rel(1), hjust = 0.5)) +
labs(title = "Total Number of Sea Turtle Strandings by Species in Florida Through the Years",
y = "Number of Strandings",
x = "Species") +
scale_fill_manual(values = rep("darkgreen", n_distinct(florida_stranding$commonname)))+
guides(fill = FALSE)
florida_stranding %>%
mutate(year = as.factor(year),
alternating_color = ifelse(as.numeric(year) %% 2 == 0, "#006E2E", "#57BB8A")) %>%
ggplot(aes(x = year, fill = alternating_color)) +
geom_bar(alpha = 0.7) +
scale_fill_manual(values = c("#006E2E", "#57BB8A")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = rel(1), hjust = 0.5)) +
labs(title = "Number of Sea Turtle Strandings by Year in Florida (1980-2022)",
y = "Number of Strandings") +
guides(fill = FALSE)
florida_stranding %>%
ggplot(aes(x=month))+
geom_bar(fill="#C3B1E1", alpha=0.9)+
facet_wrap(~commonname)+
theme(axis.text.x = element_text(angle = 60, hjust=1),
plot.title=element_text(size=rel(1), hjust = 0.5))+
labs(title="Number of Sea Turtle Strandings by Species in Each Month in Florida",
y="Number of Strandings",
x="Month")+
scale_x_discrete(limits=c("1","2","3", "4", "5", "6", "7", "8", "9", "10", "11", "12"))
green_palette <- c("#D3FCC3", "#57BB8A")
florida_stranding %>%
filter(commonname %in% c("Green turtle", "Loggerhead")) %>%
filter(condition != "NULL") %>%
group_by(commonname, condition) %>%
summarise(count = n()) %>%
ggplot(aes(x = condition, y = count, fill = commonname)) +
geom_col(position = "dodge", alpha = 0.8) +
geom_text(aes(label = count), position = position_dodge(width = 0.8), vjust = -0.5, color = "grey43", size = 2.5) +
scale_fill_manual(values = setNames(green_palette, c("Green turtle", "Loggerhead"))) +
theme(axis.text.x = element_text(angle = 60, hjust = 1),
plot.title = element_text(size = rel(1), hjust = 0.5)) +
labs(title = "Strandings Condition of Green Turtle and Loggerhead in Florida",
y = "Number of Strandings",
x = "Condition",
fill = "Species")
florida_stranding %>%
filter(commonname=="Green turtle" | commonname=="Loggerhead") %>%
ggplot(aes(x=month))+
geom_bar(fill="#C3B1E1", alpha=0.9)+
facet_wrap(~commonname)+
theme(axis.text.x = element_text(angle=30,hjust=1),
plot.title=element_text(size=rel(1), hjust = 0.5))+
labs(title="Number of Strandings of Green Turtle and Loggerhead by Month in Florida",
y="Number of Strandings",
x="Month")+
scale_x_discrete(limits=c("1","2","3", "4", "5", "6", "7", "8", "9", "10", "11", "12"))
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("janitor")
library("naniar")
library("ggplot2")
library("dplyr")
loggerheads <- read_csv("data/Adult_loggerhead_turtle.csv") %>% clean_names()
names(loggerheads)
glimpse(loggerheads)
loggerheads %>%
count(state) # first get list of states in data
loggerheads <- loggerheads %>% # combine FL values into one
mutate(state = case_when(
state %in% c("FL", "FL(FA)", "FL (FA)") ~ "FL",
TRUE ~ state
))
loggerheads_long <- loggerheads %>%
select(state, year, growth) %>%
group_by(state, year) %>%
summarize(mean_growth = mean(growth, na.rm = T))
# Creating a line plot of average growth over time for all states
loggerheads_long %>%
ggplot(aes(x = year, y = mean_growth, color = state)) +
geom_line() +
labs(title = "Mean Growth for Each State Over the Years",
x = "Year", y = "Mean Growth Rate") +
theme_minimal()
loggerheads %>%
select(sex, year, growth) %>%
filter(sex!="NA") %>%
filter(sex!="unknown") %>%
group_by(sex, year) %>%
summarize(mean_growth = mean(growth, na.rm = T)) %>%
ggplot(aes(x = year, y = mean_growth, color = sex)) +
geom_line() +
labs(title = "Mean Growth for Each Sex Over the Years",
x = "Year", y = "Mean Growth Rate") +
theme_minimal()
loggerheads %>%
select(sex, growth) %>%
filter(sex!="unknown") %>%
group_by(sex) %>%
summarise(mean_growth = mean(growth, na.rm=T)) %>%
arrange(desc(mean_growth))
loggerheads %>%
filter(sex != "unknown") %>%
ggplot(aes(x = sex, y = growth)) +
geom_boxplot() +
scale_y_log10() +  # Adding logarithmic scale
labs(title = "Boxplot of Logarithmic Growth by Sex",
x = "Sex",
y = "Logarithmic Growth") +
theme_minimal()
loggerheads %>%
select(sex, age, growth) %>%
filter(sex!="NA") %>%
filter(sex!="unknown") %>%
group_by(sex, age) %>%
summarize(mean_growth = mean(growth, na.rm = T)) %>%
ggplot(aes(x = age, y = mean_growth, color = sex)) +
geom_line() +
labs(title = "Mean Growth Rate for Each Sex with Age",
x = "Age", y = "Mean Growth") +
theme_minimal()
loggerheads %>%
group_by(sex) %>%
filter(sex != "unknown") %>%
count(age) %>%
arrange(desc(n)) %>%
ggplot(aes(x = age, y = n)) +
geom_col(position = "dodge", alpha = 0.5, fill = "pink", color = "plum") +
geom_text(data = . %>% slice_max(n, with_ties = FALSE), aes(label = age),
position = position_dodge(width = 0.9), vjust = -0.5, color = "black", size = 2) +
facet_wrap(~sex) +
labs(title = "Turtle Ages by Sex",
x = "Age",
y = "Count",
fill = "Sex") +
theme(plot.title = element_text(size = rel(1.75), hjust = 0.5))
loggerheads %>%
group_by(sex) %>%
filter(sex != "unknown") %>%
count(sex)
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("janitor")
library("naniar")
library("ggplot2")
library("dplyr")
loggerheads <- read_csv("data/Adult_loggerhead_turtle.csv") %>% clean_names()
names(loggerheads)
glimpse(loggerheads)
loggerheads %>%
count(state) # first get list of states in data
loggerheads <- loggerheads %>% # combine FL values into one
mutate(state = case_when(
state %in% c("FL", "FL(FA)", "FL (FA)") ~ "FL",
TRUE ~ state
))
loggerheads_long <- loggerheads %>%
select(state, year, growth) %>%
group_by(state, year) %>%
summarize(mean_growth = mean(growth, na.rm = T))
# Creating a line plot of average growth over time for all states
loggerheads_long %>%
ggplot(aes(x = year, y = mean_growth, color = state)) +
geom_line() +
labs(title = "Mean Growth for Each State Over the Years",
x = "Year", y = "Mean Growth Rate") +
theme_minimal()
loggerheads %>%
select(sex, year, growth) %>%
filter(sex!="NA") %>%
filter(sex!="unknown") %>%
group_by(sex, year) %>%
summarize(mean_growth = mean(growth, na.rm = T)) %>%
ggplot(aes(x = year, y = mean_growth, color = sex)) +
geom_line() +
labs(title = "Mean Growth for Each Sex Over the Years",
x = "Year", y = "Mean Growth Rate") +
theme_minimal()
loggerheads %>%
select(sex, growth) %>%
filter(sex!="unknown") %>%
group_by(sex) %>%
summarise(mean_growth = mean(growth, na.rm=T)) %>%
arrange(desc(mean_growth))
loggerheads %>%
filter(sex != "unknown") %>%
ggplot(aes(x = sex, y = growth)) +
geom_boxplot() +
scale_y_log10() +  # Adding logarithmic scale
labs(title = "Boxplot of Logarithmic Growth by Sex",
x = "Sex",
y = "Logarithmic Growth") +
theme_minimal()
loggerheads %>%
select(sex, age, growth) %>%
filter(sex!="NA") %>%
filter(sex!="unknown") %>%
group_by(sex, age) %>%
summarize(mean_growth = mean(growth, na.rm = T)) %>%
ggplot(aes(x = age, y = mean_growth, color = sex)) +
geom_line() +
labs(title = "Mean Growth Rate for Each Sex with Age",
x = "Age", y = "Mean Growth") +
theme_minimal()
loggerheads %>%
group_by(sex) %>%
filter(sex != "unknown") %>%
count(age) %>%
arrange(desc(n)) %>%
ggplot(aes(x = age, y = n)) +
geom_col(position = "dodge", alpha = 0.5, fill = "pink", color = "plum") +
geom_text(data = . %>% slice_max(n, with_ties = FALSE), aes(label = age),
position = position_dodge(width = 0.9), vjust = -0.5, color = "black", size = 2) +
facet_wrap(~sex) +
labs(title = "Turtle Ages by Sex",
x = "Age",
y = "Count",
fill = "Sex") +
theme(plot.title = element_text(size = rel(1.75), hjust = 0.5))
loggerheads %>%
group_by(sex) %>%
filter(sex != "unknown") %>%
count(sex)
library(shiny); runApp('seamap_app.R')
