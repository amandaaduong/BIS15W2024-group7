View(loggerheads_wide)
loggerheads_long %>%
select(state, year, growth) %>%
group_by(state, year) %>%
summarize(mean_growth = mean(growth, na.rm = T))
loggerheads_long <- loggerheads %>%
select(state, year, growth) %>%
group_by(state, year) %>%
summarize(mean_growth = mean(growth, na.rm = T))
View(loggerheads_long)
loggerheads <- loggerheads %>% # combine FL values into one
mutate(state = case_when(
state %in% c("FL", "FL(FA)", "FL (FA)") ~ "FL_combined",
TRUE ~ state
))
View(loggerheads)
loggerheads_long <- loggerheads %>%
select(state, year, growth) %>%
group_by(state, year) %>%
summarize(mean_growth = mean(growth, na.rm = T))
View(loggerheads_long)
loggerheads_long <- loggerheads %>%
select(state, year, growth) %>%
group_by(state, year) %>%
filter(is.na!=(growth)) %>%
summarize(mean_growth = mean(growth, na.rm = T))
loggerheads_long <- loggerheads %>%
select(state, year, growth) %>%
filter(is.na!=(growth)) %>%
group_by(state, year) %>%
summarize(mean_growth = mean(growth, na.rm = T))
loggerheads_long <- loggerheads %>%
select(state, year, growth) %>%
group_by(state, year) %>%
summarize(mean_growth = mean(growth, na.rm = T))
# Creating a line plot of average growth over time for all states
loggerheads_long %>%
filter(!is.na(growth)) %>%
ggplot(aes(x = year, y = mean_growth, color = state)) +
geom_line() +
labs(title = "Mean Growth for Each State Over the Years",
x = "Year", y = "Mean Growth Rate") +
theme_minimal()
# Creating a line plot of average growth over time for all states
loggerheads_long %>%
ggplot(aes(x = year, y = mean_growth, color = state)) +
geom_line() +
labs(title = "Mean Growth for Each State Over the Years",
x = "Year", y = "Mean Growth Rate") +
theme_minimal()
loggerheads %>%
select(sex, year, growth) %>%
filter(sex!="NA") %>%
group_by(sex, year) %>%
summarize(mean_growth = mean(growth, na.rm = T)) %>%
ggplot(aes(x = year, y = mean_growth, color = sex)) +
geom_line() +
labs(title = "Mean Growth for Each Sex Over the Years",
x = "Year", y = "Mean Growth Rate") +
theme_minimal()
loggerheads %>%
select(sex, year, growth) %>%
filter(sex!="NA") %>%
filter(sex!="unknown") %>%
group_by(sex, year) %>%
summarize(mean_growth = mean(growth, na.rm = T)) %>%
ggplot(aes(x = year, y = mean_growth, color = sex)) +
geom_line() +
labs(title = "Mean Growth for Each Sex Over the Years",
x = "Year", y = "Mean Growth Rate") +
theme_minimal()
View(loggerheads)
loggerheads %>%
select(sex, growth) %>%
group_by(sex) %>%
summarise(mean_growth = mean(growth, na.rm=T)) %>%
arrange(desc(mean_growth))
loggerheads %>%
select(sex, growth) %>%
filter(sex!="unknown") %>%
group_by(sex) %>%
summarise(mean_growth = mean(growth, na.rm=T)) %>%
arrange(desc(mean_growth))
loggerheads_new %>%
group_by(sex) %>%
mutate(mean_growth = mean(growth, na.rm=T)) %>%
ggplot(aes(sex, mean_growth))+
geom_bar()+
labs(title = "Mean Growth by Sex",
x="Sex",
y="Mean Growth")
loggerheads_new <- loggerheads %>%
group_by(sex) %>%
mutate(mean_growth = mean(growth, na.rm=T)) %>%
ggplot(aes(sex, mean_growth))+
geom_bar()+
labs(title = "Mean Growth by Sex",
x="Sex",
y="Mean Growth")
View(loggerheads_new)
loggerheads %>%
group_by(sex) %>%
mutate(mean_growth = mean(growth, na.rm=T)) %>%
ggplot(aes(sex, mean_growth))+
geom_bar()+
labs(title = "Mean Growth by Sex",
x="Sex",
y="Mean Growth")
loggerheads %>%
filter(sex != "unknown") %>%
ggplot(aes(x = sex, y = growth)) +
geom_boxplot() +
labs(title = "Boxplot of Growth by Sex",
x = "Sex",
y = "Growth") +
theme_minimal()
loggerheads %>%
filter(sex != "unknown") %>%
summarise(mean_growth = mean(growth, na.rm=T)) %>%
ggplot(aes(x = sex, y = growth)) +
geom_boxplot() +
labs(title = "Boxplot of Growth by Sex",
x = "Sex",
y = "Growth") +
theme_minimal()
loggerheads %>%
filter(sex != "unknown") %>%
summarise(mean_growth = mean(growth, na.rm=T)) %>%
ggplot(aes(x = sex, y = mean_growth)) +
geom_boxplot() +
labs(title = "Boxplot of Growth by Sex",
x = "Sex",
y = "Growth") +
theme_minimal()
loggerheads %>%
select(sex, growth) %>%
filter(sex != "unknown") %>%
summarise(mean_growth = mean(growth, na.rm=T)) %>%
ggplot(aes(x = sex, y = mean_growth)) +
geom_boxplot() +
labs(title = "Boxplot of Growth by Sex",
x = "Sex",
y = "Growth") +
theme_minimal()
loggerheads %>%
select(sex, growth) %>%
filter(sex!="unknown") %>%
group_by(sex) %>%
summarise(mean_growth = mean(growth, na.rm=T)) %>%
ggplot(aes(x = sex, y = mean_growth)) +
geom_boxplot() +
labs(title = "Boxplot of Growth by Sex",
x = "Sex",
y = "Growth") +
theme_minimal()
loggerheads %>%
filter(sex != "unknown") %>%
ggplot(aes(x = sex, y = growth)) +
geom_boxplot() +
scale_y_log10() +  # Adding logarithmic scale
labs(title = "Boxplot of Logarithmic Growth by Sex",
x = "Sex",
y = "Logarithmic Growth") +
theme_minimal()
loggerheads %>%
filter(sex != "unknown") %>%
ggplot(aes(x = sex, y = age)) +
geom_line() +
labs(title = "Age and Sex",
x = "Sex",
y = "Age") +
theme_minimal()
loggerheads %>%
select(sex, age, growth) %>%
filter(sex!="NA") %>%
filter(sex!="unknown") %>%
group_by(sex, age) %>%
summarize(mean_growth = mean(growth, na.rm = T)) %>%
ggplot(aes(x = age, y = mean_growth, color = sex)) +
geom_line() +
labs(title = "Mean Growth for Each Sex Over the Years",
x = "Year", y = "Mean Growth Rate") +
theme_minimal()
loggerheads %>%
select(sex, age, growth) %>%
filter(sex!="NA") %>%
filter(sex!="unknown") %>%
group_by(sex, age) %>%
summarize(mean_growth = mean(growth, na.rm = T)) %>%
ggplot(aes(x = age, y = mean_growth, color = sex)) +
geom_line() +
labs(title = "Mean Growth for Each Sex Over the Years",
x = "Year", y = "Mean Growth Rate") +
theme_minimal()
loggerheads %>%
select(sex, age, growth) %>%
filter(sex!="NA") %>%
filter(sex!="unknown") %>%
group_by(sex, age) %>%
summarize(mean_growth = mean(growth, na.rm = T)) %>%
ggplot(aes(x = age, y = mean_growth, color = sex)) +
geom_line() +
labs(title = "Mean Growth for Each Sex with Age",
x = "Age", y = "Mean Growth") +
theme_minimal()
register_stadiamaps("c65beb04-e8c8-42f7-8061-f35d2d27ec63", write = FALSE)
library(ggmap)
register_stadiamaps("c65beb04-e8c8-42f7-8061-f35d2d27ec63", write = FALSE)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
homerange <- readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
ui <- fluidPage(titlePanel("Homerange Locomotion"),
radioButtons("x", "Select Fill Variable", choices=c("trophic.guild", "thermoregulation"), selected="trophic.guild"),
plotOutput("plot", width="600px", height="500px")
)
library(tidyverse)
library(shiny)
library(shinydashboard)
require(janitor)
library(palmerpenguins)
ui <- fluidPage(titlePanel("Homerange Locomotion"),
radioButtons("x", "Select Fill Variable", choices=c("trophic.guild", "thermoregulation"), selected="trophic.guild"),
plotOutput("plot", width="600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(homerange, aes_string(x="locomotion", fill=input$x)) +
geom_bar(position="dodge", alpha=0.8, color="black") +
theme_light(base_size=18) +
labs(x=NULL, y=NULL, fill="Fill Variable")
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Log 10 Homerange by Taxon"),
selectInput("x", "Select Taxon",
choices=c("birds", "lake fishes", "lizards", "mammals", "marine fishes", "river fishes", "snakes", "tortoises", "turtles"), selected="birds"),
plotOutput("plot", width="600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
homerange %>%
filter(taxon==input$x) %>%
ggplot(aes(x=log10.hra))+
geom_density(fill="steelblue", color="black", alpha=0.6)
})
}
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
loggerheads <- loggerheads %>% # combine FL values into one
mutate(state = case_when(
state %in% c("FL", "FL(FA)", "FL (FA)") ~ "FL",
TRUE ~ state
))
loggerheads_long <- loggerheads %>%
select(state, year, growth) %>%
group_by(state, year) %>%
summarize(mean_growth = mean(growth, na.rm = T))
# Creating a line plot of average growth over time for all states
loggerheads_long %>%
ggplot(aes(x = year, y = mean_growth, color = state)) +
geom_line() +
labs(title = "Mean Growth for Each State Over the Years",
x = "Year", y = "Mean Growth Rate") +
theme_minimal()
loggerheads <- loggerheads %>% # combine FL values into one
mutate(state = case_when(
state %in% c("FL", "FL(FA)", "FL (FA)") ~ "FL",
TRUE ~ state
))
loggerheads_long <- loggerheads %>%
select(state, year, growth) %>%
group_by(state, year) %>%
summarize(mean_growth = mean(growth, na.rm = T))
# Creating a line plot of average growth over time for all states
loggerheads_long %>%
ggplot(aes(x = year, y = mean_growth, color = state)) +
geom_line() +
labs(title = "Mean Growth for Each State Over the Years",
x = "Year", y = "Mean Growth Rate") +
theme_minimal()
View(loggerheads)
loggerheads %>%
count(state) # first get list of states in data
library(shiny)
ui <- fluidPage(titlePanel("Log 10 Homerange by Taxon"),
selectInput("x", "Select Taxon",
choices=c("birds", "lake fishes", "lizards", "mammals", "marine fishes", "river fishes", "snakes", "tortoises", "turtles"), selected="birds"),
plotOutput("plot", width="600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
homerange %>%
filter(taxon==input$x) %>%
ggplot(aes(x=log10.hra))+
geom_density(fill="steelblue", color="black", alpha=0.6)
})
}
shinyApp(ui, server)
ui <- fluidPage(titlePanel("Mean Growth by State"),
selectInput("x", "Select State",
choices=c("FL", "GA", "MA", "MD", "NC", "NJ", "SC", "VA"), selected="FL"),
plotOutput("plot", width="600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
loggerheads %>%
group_by(state, year) %>%
summarize(mean_growth = mean(growth, na.rm = T)) %>%
filter(state==input$x) %>%
ggplot(aes(x=mean_growth))+
geom_line()
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_depth_mm"),
sliderInput("pointsize", "Select the Point Size", min = 0.5, max = 3, value = 1, step = 0.5),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(penguins, aes_string(x = input$x, y = input$y, color="species")) +
geom_point(size=input$pointsize) +
theme_light()
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_depth_mm"),
sliderInput("pointsize", "Select the Point Size", min = 0.5, max = 3, value = 1, step = 0.5),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(penguins, aes_string(x = input$x, y = input$y, color="species")) +
geom_point(size=input$pointsize) +
theme_light()
})
}
shinyApp(ui, server)
View(loggerheads)
knitr::opts_chunk$set(echo = TRUE)
library(ggmap)
register_stadiamaps("311578bf-a7b3-4a46-955f-50b1b0fe5edc", write = FALSE)
seamap <- read_csv("data/obis_seamap_swot_65e0e9344b011_20240229_153235_site_locations_csv.csv")
library(ggmap)
register_stadiamaps("311578bf-a7b3-4a46-955f-50b1b0fe5edc", write = FALSE)
seamap <- read_csv("data/obis_seamap_swot_65e0e9344b011_20240229_153235_site_locations_csv.csv")
library(ggmap)
library(tidyverse)
library(janitor)
library(dplyr)
library(naniar)
library(ggmap)
register_stadiamaps("311578bf-a7b3-4a46-955f-50b1b0fe5edc", write = FALSE)
register_stadiamaps("311578bf-a7b3-4a46-955f-50b1b0fe5edc", write = FALSE)
seamap <- read_csv("data/obis_seamap_swot_65e0e9344b011_20240229_153235_site_locations_csv.csv")
seamap <- read_csv("data/obis_seamap_swot_65e0e9344b011_20240229_153235_site_locations_csv.csv") %>% clean_names()
glimpse(seamap)
View(seamap)
seamap %>%
select(latitude, longitude) %>%
summary()
sea_bbox <- make_bbox(longitude, latitude, f = 0.03)
sea_bbox <- make_bbox(longitude,latitude)
longitude <- c(-179.684, 179.613)
latitude <- c(-29.481, 43.267)
longitude <- c(-179.684, 179.613)
latitude <- c(-29.481, 43.267)
sea_bbox <- make_bbox(longitude,latitude)
sea_bbox <- make_bbox(longitude,latitude, f=0.03)
sta <- get_stadiamap(seai_bbox,maptype = "stamen_terrain", zoom=7)
sta <- get_stadiamap(sea_bbox,maptype = "stamen_terrain", zoom=7)
sta <- get_stadiamap(sea_bbox,maptype = "stamen_terrain")
sta <- get_stadiamap(sea_bbox,maptype = "stamen_terrain", zoom = 9)
sta <- get_stadiamap(sea_bbox,maptype = "stamen_terrain", zoom = 5)
sea <- get_stadiamap(sea_bbox,maptype = "stamen_terrain", zoom = 5)
sea <- get_stadiamap(sea_bbox, maptype = "stamen_terrain", zoom = 5)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(dplyr)
library(naniar)
library(ggmap)
register_stadiamaps("311578bf-a7b3-4a46-955f-50b1b0fe5edc", write = FALSE)
seamap <- read_csv("data/obis_seamap_swot_65e0e9344b011_20240229_153235_site_locations_csv.csv") %>% clean_names()
glimpse(seamap)
seamap %>%
select(latitude, longitude) %>%
summary()
longitude <- c(-179.684, 179.613)
latitude <- c(-29.481, 43.267)
sea_bbox <- make_bbox(longitude,latitude, f=0.03)
sea <- get_stadiamap(sea_bbox, maptype = "stamen_terrain", zoom = 5)
library(tidyverse)
library(janitor)
library(dplyr)
library(naniar)
library(ggmap)
register_stadiamaps("311578bf-a7b3-4a46-955f-50b1b0fe5edc", write = FALSE)
seamap <- read_csv("data/obis_seamap_swot_65e0e9344b011_20240229_153235_site_locations_csv.csv") %>% clean_names()
seamap %>%
select(latitude, longitude) %>%
summary()
longitude <- c(-179.684, 179.613)
latitude <- c(-29.481, 43.267)
sea_bbox <- make_bbox(longitude,latitude, f=0.03)
sea <- get_stadiamap(sea_bbox, maptype = "stamen_terrain", zoom = 5)
sea <- get_stadiamap(sea_bbox, maptype = "stamen_terrain", zoom = 5)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(dplyr)
library(naniar)
library(ggmap)
register_stadiamaps("311578bf-a7b3-4a46-955f-50b1b0fe5edc", write = FALSE)
seamap <- read_csv("data/obis_seamap_swot_65e0e9344b011_20240229_153235_site_locations_csv.csv") %>% clean_names()
glimpse(seamap)
seamap %>%
select(latitude, longitude) %>%
summary()
longitude <- c(-179.684, 179.613)
latitude <- c(-29.481, 43.267)
sea_bbox <- make_bbox(longitude,latitude, f=0.03)
sea <- get_stadiamap(sea_bbox, maptype = "stamen_terrain", zoom = 5)
knitr::opts_chunk$set(echo = TRUE)
library(ggmap)
register_stadiamaps("311578bf-a7b3-4a46-955f-50b1b0fe5edc", write = FALSE)
stadium map
seamap <- read_csv("data/obis_seamap_swot_65e0e9344b011_20240229_153235_site_locations_csv.csv") %>% clean_names()
register_stadiamaps("311578bf-a7b3-4a46-955f-50b1b0fe5edc", write = FALSE)
seamap %>%
select(latitude, longitude) %>%
summary()
sea_bbox <- make_bbox(longitude,latitude, f=0.03)
sea <- get_stadiamap(sea_bbox, maptype = "stamen_terrain", zoom = 5)
install.packages("ggmap")
install.packages("ggmap")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(dplyr)
library(naniar)
library(ggmap)
install.packages("ggmap")
register_stadiamaps("311578bf-a7b3-4a46-955f-50b1b0fe5edc", write = FALSE)
seamap <- read_csv("data/obis_seamap_swot_65e0e9344b011_20240229_153235_site_locations_csv.csv") %>% clean_names()
seamap %>%
select(latitude, longitude) %>%
summary()
longitude <- c(-179.684, 179.613)
latitude <- c(-29.481, 43.267)
sea_bbox <- make_bbox(longitude,latitude, f=0.03)
sea <- get_stadiamap(sea_bbox, maptype = "stamen_terrain", zoom = 5)
install.packages("ggmap")
sea <- get_stadiamap(sea_bbox, maptype = "stamen_terrain", zoom = 5)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(dplyr)
library(naniar)
install.packages("ggmap")
library(ggmap)
register_stadiamaps("311578bf-a7b3-4a46-955f-50b1b0fe5edc", write = FALSE)
seamap <- read_csv("data/obis_seamap_swot_65e0e9344b011_20240229_153235_site_locations_csv.csv") %>% clean_names()
seamap %>%
select(latitude, longitude) %>%
summary()
longitude <- c(-179.684, 179.613)
latitude <- c(-29.481, 43.267)
sea_bbox <- make_bbox(longitude,latitude, f=0.03)
sea <- get_stadiamap(sea_bbox, maptype = "stamen_terrain", zoom = 5)
install.packages("ggmap")
ggplot(sea)
ggplot(sea)
sea_bbox <- get_stadiamap(sea_bbox, maptype = "stamen_terrain", zoom = 5)
sea_bbox <- get_stadiamap(sea_bbox, maptype = "stamen_terrain", zoom = 5)
sea_bbox <- get_stadiamap(sea_bbox, maptype = "stamen_terrain", zoom = 5)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(dplyr)
library(naniar)
install.packages("ggmap")
library(ggmap)
register_stadiamaps("311578bf-a7b3-4a46-955f-50b1b0fe5edc", write = FALSE)
seamap <- read_csv("data/obis_seamap_swot_65e0e9344b011_20240229_153235_site_locations_csv.csv") %>% clean_names()
glimpse(seamap)
seamap %>%
select(latitude, longitude) %>%
summary()
longitude <- c(-179.684, 179.613)
latitude <- c(-29.481, 43.267)
sea_bbox <- make_bbox(longitude,latitude, f=0.03)
<- get_stadiamap(sea_bbox, maptype = "stamen_terrain", zoom = 5)
install.packages("ggmap")
get_stadiamap(sea_bbox, maptype = "stamen_terrain", zoom = 5)
map1 <- get_stadiamap(sea_bbox, maptype = "stamen_terrain", zoom = 5)
map1 <- get_stadiamap(sea_bbox, maptype = "stamen_terrain", zoom = 5)
library(shiny); runApp('seamap_app.R')
